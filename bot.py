import os
from flask import Flask, request
import telebot
from telebot import types

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ---
BOT_TOKEN = "8473490832:AAG3i471zHemKSrk52bb7S4Yx_SxC9grvH0"  # —Ç–æ–∫–µ–Ω –ø—Ä—è–º–æ –≤ –∫–æ–¥–µ
WEBHOOK_URL = "https://—Ç–≤–æ–π-–ø—Ä–æ–µ–∫—Ç-–Ω–∞-railway.app"  # –≤—Å—Ç–∞–≤—å —Å—Å—ã–ª–∫—É –Ω–∞ —Å–≤–æ–π –ø—Ä–æ–µ–∫—Ç Railway

ADMINS = [8179965778, 8117502632, 8037207761]  # ID –∞–¥–º–∏–Ω–æ–≤
CONSULTANT_USERNAME = "@Serg_help"  # —é—Ä–∏—Å—Ç
REVIEW_CHANNEL_LINK = "@doc_of_service"  # –∫–∞–Ω–∞–ª —Å –æ—Ç–∑—ã–≤–∞–º–∏

bot = telebot.TeleBot(BOT_TOKEN)
app = Flask(__name__)

# --- –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ---
def main_menu_markup():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.row("üöò –ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–µ –ø—Ä–∞–≤–∞", "üßæ –ü—Ä–æ–≤–µ—Ä–∫–∞ —à—Ç—Ä–∞—Ñ–æ–≤")
    markup.row("üìú –ü–µ—Ä–≤–∏—á–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–∞–≤", "‚öñÔ∏è –ü–æ–º–æ—â—å –ø—Ä–∏ –ª–∏—à–µ–Ω–∏–∏")
    markup.row("üì¢ –û—Ç–∑—ã–≤—ã", "‚úÖ –ù–∞—à–∏ –≥–∞—Ä–∞–Ω—Ç–∏–∏")
    markup.row("üí¨ –í—Å–µ –≤–æ–ø—Ä–æ—Å—ã –∫ —é—Ä–∏—Å—Ç—É")
    return markup

# --- –°—Ç–∞—Ä—Ç ---
@bot.message_handler(commands=['start'])
def start(message):
    bot.send_message(
        message.chat.id,
        "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ *AutoLawBot* ‚Äî –≤–∞—à –Ω–∞–¥—ë–∂–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –ø–æ —é—Ä–∏–¥–∏—á–µ—Å–∫–∏–º –≤–æ–ø—Ä–æ—Å–∞–º –≤–æ–¥–∏—Ç–µ–ª–µ–π!\n\n"
        "üìå –ú—ã –æ—Ñ–æ—Ä–º–ª—è–µ–º –¥–æ–∫—É–º–µ–Ω—Ç—ã *—Ç–æ–ª—å–∫–æ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ* –∏ –ø–æ–ª–Ω–æ—Å—Ç—å—é —Å–æ–ø—Ä–æ–≤–æ–∂–¥–∞–µ–º –∫–∞–∂–¥—ã–π –ø—Ä–æ—Ü–µ—Å—Å.\n"
        "üõ°Ô∏è –ù–∞–¥—ë–∂–Ω–æ—Å—Ç—å, –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å –∏ –∫–∞—á–µ—Å—Ç–≤–æ ‚Äî –Ω–∞—à –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç!",
        parse_mode="Markdown",
        reply_markup=main_menu_markup()
    )

# --- –ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–µ –ø—Ä–∞–≤–∞ ---
@bot.message_handler(func=lambda m: m.text == "üöò –ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–µ –ø—Ä–∞–≤–∞")
def intl_license(message):
    bot.send_message(message.chat.id,
                     "üåç *–ê–Ω–∫–µ—Ç–∞ –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–æ–≥–æ –í–£:*\n\n"
                     "1. –§–ò–û:\n2. –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è:\n3. –ì—Ä–∞–∂–¥–∞–Ω—Å—Ç–≤–æ:\n4. –ê–¥—Ä–µ—Å –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è:\n5. –§–æ—Ç–æ –ø–∞—Å–ø–æ—Ä—Ç–∞ –∏ –Ω–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –í–£ (–µ—Å–ª–∏ –µ—Å—Ç—å)\n\n"
                     "üì© –û—Ç–ø—Ä–∞–≤—å—Ç–µ –¥–∞–Ω–Ω—ã–µ —Å—é–¥–∞ ‚Äî –Ω–∞—à —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏.",
                     parse_mode="Markdown")
    bot.register_next_step_handler(message, handle_intl_license)

def handle_intl_license(message):
    if message.content_type == 'text':
        user_data = message.text
        for admin_id in ADMINS:
            bot.send_message(admin_id, f"–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–µ –ø—Ä–∞–≤–∞ –æ—Ç @{message.from_user.username} (ID: {message.from_user.id}):\n\n{user_data}")
        bot.send_message(message.chat.id, "‚úÖ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞. –û–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞.")
    else:
        bot.send_message(message.chat.id, "‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –¥–∞–Ω–Ω—ã–µ —Ç–µ–∫—Å—Ç–æ–º.")
        bot.register_next_step_handler(message, handle_intl_license)

# --- –ü—Ä–æ–≤–µ—Ä–∫–∞ —à—Ç—Ä–∞—Ñ–æ–≤ ---
@bot.message_handler(func=lambda m: m.text == "üßæ –ü—Ä–æ–≤–µ—Ä–∫–∞ —à—Ç—Ä–∞—Ñ–æ–≤")
def fines_form(message):
    bot.send_message(message.chat.id,
                     "üßæ *–ê–Ω–∫–µ—Ç–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —à—Ç—Ä–∞—Ñ–æ–≤:*\n\n"
                     "1. –§–ò–û:\n2. –ù–æ–º–µ—Ä –í–£:\n3. –ì–æ—Å–Ω–æ–º–µ—Ä –∞–≤—Ç–æ–º–æ–±–∏–ª—è:\n4. –†–µ–≥–∏–æ–Ω —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏\n\n"
                     "üì© –û—Ç–ø—Ä–∞–≤—å—Ç–µ –¥–∞–Ω–Ω—ã–µ —Å—é–¥–∞ ‚Äî –º—ã –ø—Ä–æ–≤–µ—Ä–∏–º –∏ —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏.",
                     parse_mode="Markdown")
    bot.register_next_step_handler(message, handle_fines_form)

def handle_fines_form(message):
    if message.content_type == 'text':
        user_data = message.text
        for admin_id in ADMINS:
            bot.send_message(admin_id, f"–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É —à—Ç—Ä–∞—Ñ–æ–≤ –æ—Ç @{message.from_user.username} (ID: {message.from_user.id}):\n\n{user_data}")
        bot.send_message(message.chat.id, "‚úÖ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞. –û–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞.")
    else:
        bot.send_message(message.chat.id, "‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –¥–∞–Ω–Ω—ã–µ —Ç–µ–∫—Å—Ç–æ–º.")
        bot.register_next_step_handler(message, handle_fines_form)

# --- –ü–µ—Ä–≤–∏—á–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–∞–≤ ---
@bot.message_handler(func=lambda m: m.text == "üìú –ü–µ—Ä–≤–∏—á–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–∞–≤")
def primary_license(message):
    bot.send_message(message.chat.id,
                     "üìú *–ê–Ω–∫–µ—Ç–∞ –¥–ª—è –ø–µ—Ä–≤–∏—á–Ω–æ–≥–æ –ø–æ–ª—É—á–µ–Ω–∏—è –í–£:*\n\n"
                     "1. –§–ò–û\n2. –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è\n3. –ì—Ä–∞–∂–¥–∞–Ω—Å—Ç–≤–æ\n4. –ê–¥—Ä–µ—Å –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è\n5. –§–æ—Ç–æ –ø–∞—Å–ø–æ—Ä—Ç–∞\n\n"
                     "üì© –û—Ç–ø—Ä–∞–≤—å—Ç–µ –¥–∞–Ω–Ω—ã–µ —Å—é–¥–∞ ‚Äî –Ω–∞—á–Ω–µ–º –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ.",
                     parse_mode="Markdown")
    bot.register_next_step_handler(message, handle_primary_license)

def handle_primary_license(message):
    if message.content_type == 'text':
        user_data = message.text
        for admin_id in ADMINS:
            bot.send_message(admin_id, f"–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –ø–µ—Ä–≤–∏—á–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –í–£ –æ—Ç @{message.from_user.username} (ID: {message.from_user.id}):\n\n{user_data}")
        bot.send_message(message.chat.id, "‚úÖ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞. –û–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞.")
    else:
        bot.send_message(message.chat.id, "‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –¥–∞–Ω–Ω—ã–µ —Ç–µ–∫—Å—Ç–æ–º.")
        bot.register_next_step_handler(message, handle_primary_license)

# --- –ü–æ–º–æ—â—å –ø—Ä–∏ –ª–∏—à–µ–Ω–∏–∏ ---
@bot.message_handler(func=lambda m: m.text == "‚öñÔ∏è –ü–æ–º–æ—â—å –ø—Ä–∏ –ª–∏—à–µ–Ω–∏–∏")
def help_license(message):
    bot.send_message(message.chat.id,
                     "‚öñÔ∏è *–ê–Ω–∫–µ—Ç–∞ –¥–ª—è –ø–æ–º–æ—â–∏ –ø—Ä–∏ –ª–∏—à–µ–Ω–∏–∏ –í–£:*\n\n"
                     "1. –§–ò–û\n2. –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è\n3. –ü—Ä–∏—á–∏–Ω–∞ –ª–∏—à–µ–Ω–∏—è (–µ—Å–ª–∏ –∏–∑–≤–µ—Å—Ç–Ω–∞)\n4. –î–∞—Ç–∞ –ª–∏—à–µ–Ω–∏—è\n\n"
                     "üì© –û—Ç–ø—Ä–∞–≤—å—Ç–µ –¥–∞–Ω–Ω—ã–µ —Å—é–¥–∞ ‚Äî —é—Ä–∏—Å—Ç —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏.",
                     parse_mode="Markdown")
    bot.register_next_step_handler(message, handle_help_license)

def handle_help_license(message):
    if message.content_type == 'text':
        user_data = message.text
        for admin_id in ADMINS:
            bot.send_message(admin_id, f"–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –ø–æ–º–æ—â—å –ø—Ä–∏ –ª–∏—à–µ–Ω–∏–∏ –í–£ –æ—Ç @{message.from_user.username} (ID: {message.from_user.id}):\n\n{user_data}")
        bot.send_message(message.chat.id, "‚úÖ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞. –û–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞.")
    else:
        bot.send_message(message.chat.id, "‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –¥–∞–Ω–Ω—ã–µ —Ç–µ–∫—Å—Ç–æ–º.")
        bot.register_next_step_handler(message, handle_help_license)

# --- –ú–µ–¥–∏–∞ ---
@bot.message_handler(content_types=['photo', 'document'])
def handle_media(message):
    for admin_id in ADMINS:
        if message.content_type == 'photo':
            bot.send_photo(admin_id, message.photo[-1].file_id, caption=f"–§–æ—Ç–æ –æ—Ç @{message.from_user.username}")
        elif message.content_type == 'document':
            bot.send_document(admin_id, message.document.file_id, caption=f"–î–æ–∫—É–º–µ–Ω—Ç –æ—Ç @{message.from_user.username}")
    bot.send_message(message.chat.id, "‚úÖ –§–æ—Ç–æ/–¥–æ–∫—É–º–µ–Ω—Ç –ø–æ–ª—É—á–µ–Ω—ã. –û–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞.")

# --- –û—Ç–∑—ã–≤—ã ---
@bot.message_handler(func=lambda m: m.text == "üì¢ –û—Ç–∑—ã–≤—ã")
def show_reviews(message):
    bot.send_message(message.chat.id, f"üó£ –û–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –æ—Ç–∑—ã–≤–∞–º–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤:\nüëâ {REVIEW_CHANNEL_LINK}")

# --- –ì–∞—Ä–∞–Ω—Ç–∏–∏ ---
@bot.message_handler(func=lambda m: m.text == "‚úÖ –ù–∞—à–∏ –≥–∞—Ä–∞–Ω—Ç–∏–∏")
def show_guarantees(message):
    bot.send_message(message.chat.id,
                     "‚úÖ *–ù–∞—à–∏ –≥–∞—Ä–∞–Ω—Ç–∏–∏:*\n"
                     "- –†–∞–±–æ—Ç–∞–µ–º –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ –∏ –∑–∞–∫–æ–Ω–Ω–æ\n"
                     "- –ü–æ–ª–Ω–æ–µ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ –æ—Ç –ø–æ–¥–∞—á–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –¥–æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏\n"
                     "- –ë—ã—Å—Ç—Ä–æ–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –±–µ–∑ –æ—á–µ—Ä–µ–¥–µ–π\n"
                     "- –ü—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ —é—Ä–∏—Å—Ç—ã —Å –æ–ø—ã—Ç–æ–º 5+ –ª–µ—Ç\n"
                     "- –ü–æ–ª–Ω–∞—è –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å –∏ –¥–æ–≤–µ—Ä–∏–µ",
                     parse_mode="Markdown")

# --- –ö–æ–Ω—Ç–∞–∫—Ç —Å —é—Ä–∏—Å—Ç–æ–º ---
@bot.message_handler(func=lambda m: m.text == "üí¨ –í—Å–µ –≤–æ–ø—Ä–æ—Å—ã –∫ —é—Ä–∏—Å—Ç—É")
def contact_lawyer(message):
    bot.send_message(message.chat.id, f"üë®‚Äç‚öñÔ∏è –°–≤—è–∂–∏—Ç–µ—Å—å —Å —é—Ä–∏—Å—Ç–æ–º: {CONSULTANT_USERNAME}")

# --- –§–æ–ª–±—ç–∫ ---
@bot.message_handler(content_types=["text"])
def fallback(message):
    bot.send_message(message.chat.id, "‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é –±–æ—Ç–∞.")

# --- Webhook –¥–ª—è Railway ---
app = Flask(__name__)

@app.route(f"/{BOT_TOKEN}", methods=['POST'])
def webhook():
    json_str = request.get_data().decode('utf-8')
    update = telebot.types.Update.de_json(json_str)
    bot.process_new_updates([update])
    return "!", 200

# --- –ó–∞–ø—É—Å–∫ webhook ---
bot.remove_webhook()
bot.set_webhook(url=f"{WEBHOOK_URL}/{BOT_TOKEN}")

if __name__ == "__main__":
    app.run(host="0.0.0.0", port=int(os.environ.get("PORT", 5000)))
