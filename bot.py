import telebot
from telebot import types
from flask import Flask, request

# =========================
BOT_TOKEN = "8473490832:AAG3i471zHemKSrk52bb7S4Yx_SxC9grvH0"
WEBHOOK_URL = "https://autolaw-bot-production.up.railway.app"

bot = telebot.TeleBot(BOT_TOKEN)
app = Flask(__name__)

# –ê–¥–º–∏–Ω—ã
ADMINS = [8179965778, 8117502632, 8037207761]

# –Æ—Ä–∏—Å—Ç –∏ –∫–∞–Ω–∞–ª –æ—Ç–∑—ã–≤–æ–≤
CONSULTANT_USERNAME = "@Serg_help"
REVIEW_CHANNEL_LINK = "@doc_of_service"

# =========================
# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
def main_menu_markup():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add("üöò –ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–µ –ø—Ä–∞–≤–∞", "üßæ –ü—Ä–æ–≤–µ—Ä–∫–∞ —à—Ç—Ä–∞—Ñ–æ–≤")
    markup.add("üìú –ü–µ—Ä–≤–∏—á–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–∞–≤", "‚öñÔ∏è –ü–æ–º–æ—â—å –ø—Ä–∏ –ª–∏—à–µ–Ω–∏–∏")
    markup.add("üì¢ –û—Ç–∑—ã–≤—ã", "‚úÖ –ù–∞—à–∏ –≥–∞—Ä–∞–Ω—Ç–∏–∏")
    markup.add("üí¨ –í—Å–µ –≤–æ–ø—Ä–æ—Å—ã –∫ —é—Ä–∏—Å—Ç—É")
    return markup

# =========================
# –°—Ç–∞—Ä—Ç
@bot.message_handler(commands=['start'])
def start(message):
    bot.send_message(
        message.chat.id,
        "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ *AutoLawBot* ‚Äî —é—Ä–∏–¥–∏—á–µ—Å–∫–∞—è –ø–æ–º–æ—â—å –≤–æ–¥–∏—Ç–µ–ª—è–º!\n\n"
        "üìå –ú—ã –æ—Ñ–æ—Ä–º–ª—è–µ–º –¥–æ–∫—É–º–µ–Ω—Ç—ã —Ç–æ–ª—å–∫–æ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ, –±–µ–∑ –æ—á–µ—Ä–µ–¥–µ–π –∏ –ª–∏—à–Ω–µ–π –±—é—Ä–æ–∫—Ä–∞—Ç–∏–∏.\n"
        "‚öñÔ∏è –ù–∞—à–∏ —é—Ä–∏—Å—Ç—ã –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã –∏ –∏–º–µ—é—Ç –æ–ø—ã—Ç —Ä–∞–±–æ—Ç—ã.",
        parse_mode="Markdown",
        reply_markup=main_menu_markup()
    )

# =========================
# –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞—è–≤–æ–∫ –∞–¥–º–∏–Ω–∞–º
def send_to_admins(user, data, title):
    for admin_id in ADMINS:
        bot.send_message(
            admin_id,
            f"üíº *{title}*\n–û—Ç @{user.username} (ID: {user.id}):\n\n{data}",
            parse_mode="Markdown"
        )
    bot.send_message(user.id, "‚úÖ –°–ø–∞—Å–∏–±–æ! –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞. –û–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞.")

def handle_text_form(message, title):
    if message.content_type == 'text':
        send_to_admins(message.from_user, message.text, title)
    else:
        bot.send_message(message.chat.id, "‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –¥–∞–Ω–Ω—ã–µ —Ç–µ–∫—Å—Ç–æ–º.")
        bot.register_next_step_handler(message, lambda m: handle_text_form(m, title))

# =========================
# –†–∞–∑–¥–µ–ª—ã –º–µ–Ω—é
@bot.message_handler(func=lambda m: m.text == "üöò –ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–µ –ø—Ä–∞–≤–∞")
def intl_license(message):
    bot.send_message(
        message.chat.id,
        "üåç *–ê–Ω–∫–µ—Ç–∞ –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–æ–≥–æ –í–£:*\n"
        "1. –§–ò–û:\n2. –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è:\n3. –ì—Ä–∞–∂–¥–∞–Ω—Å—Ç–≤–æ:\n4. –ê–¥—Ä–µ—Å –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è:\n5. –§–æ—Ç–æ –ø–∞—Å–ø–æ—Ä—Ç–∞ –∏ –Ω–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –í–£ (–µ—Å–ª–∏ –µ—Å—Ç—å):",
        parse_mode="Markdown"
    )
    bot.register_next_step_handler(message, lambda m: handle_text_form(m, "–ó–∞—è–≤–∫–∞ –Ω–∞ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–µ –ø—Ä–∞–≤–∞"))

@bot.message_handler(func=lambda m: m.text == "üßæ –ü—Ä–æ–≤–µ—Ä–∫–∞ —à—Ç—Ä–∞—Ñ–æ–≤")
def fines_form(message):
    bot.send_message(
        message.chat.id,
        "üßæ *–ê–Ω–∫–µ—Ç–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —à—Ç—Ä–∞—Ñ–æ–≤ –∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π:*\n"
        "1. –§–ò–û:\n2. –ù–æ–º–µ—Ä –í–£:\n3. –ì–æ—Å–Ω–æ–º–µ—Ä –∞–≤—Ç–æ–º–æ–±–∏–ª—è:\n4. –†–µ–≥–∏–æ–Ω —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:",
        parse_mode="Markdown"
    )
    bot.register_next_step_handler(message, lambda m: handle_text_form(m, "–ü—Ä–æ–≤–µ—Ä–∫–∞ —à—Ç—Ä–∞—Ñ–æ–≤"))

@bot.message_handler(func=lambda m: m.text == "üìú –ü–µ—Ä–≤–∏—á–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–∞–≤")
def primary_license(message):
    bot.send_message(
        message.chat.id,
        "üìú *–ê–Ω–∫–µ—Ç–∞ –¥–ª—è –ø–µ—Ä–≤–∏—á–Ω–æ–≥–æ –ø–æ–ª—É—á–µ–Ω–∏—è –í–£:*\n"
        "1. –§–ò–û:\n2. –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è:\n3. –ì—Ä–∞–∂–¥–∞–Ω—Å—Ç–≤–æ:\n4. –ê–¥—Ä–µ—Å –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è:\n5. –§–æ—Ç–æ –ø–∞—Å–ø–æ—Ä—Ç–∞:",
        parse_mode="Markdown"
    )
    bot.register_next_step_handler(message, lambda m: handle_text_form(m, "–ü–µ—Ä–≤–∏—á–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –í–£"))

@bot.message_handler(func=lambda m: m.text == "‚öñÔ∏è –ü–æ–º–æ—â—å –ø—Ä–∏ –ª–∏—à–µ–Ω–∏–∏")
def help_license(message):
    bot.send_message(
        message.chat.id,
        "‚öñÔ∏è *–ê–Ω–∫–µ—Ç–∞ –¥–ª—è –ø–æ–º–æ—â–∏ –ø—Ä–∏ –ª–∏—à–µ–Ω–∏–∏ –í–£:*\n"
        "1. –§–ò–û:\n2. –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è:\n3. –ü—Ä–∏—á–∏–Ω–∞ –ª–∏—à–µ–Ω–∏—è (–µ—Å–ª–∏ –∏–∑–≤–µ—Å—Ç–Ω–∞):\n4. –î–∞—Ç–∞ –ª–∏—à–µ–Ω–∏—è:",
        parse_mode="Markdown"
    )
    bot.register_next_step_handler(message, lambda m: handle_text_form(m, "–ü–æ–º–æ—â—å –ø—Ä–∏ –ª–∏—à–µ–Ω–∏–∏ –í–£"))

# =========================
# –§–æ—Ç–æ –∏ –¥–æ–∫—É–º–µ–Ω—Ç—ã
@bot.message_handler(content_types=['photo', 'document'])
def handle_media(message):
    for admin_id in ADMINS:
        if message.content_type == 'photo':
            bot.send_photo(admin_id, message.photo[-1].file_id, caption=f"–§–æ—Ç–æ –æ—Ç @{message.from_user.username}")
        elif message.content_type == 'document':
            bot.send_document(admin_id, message.document.file_id, caption=f"–î–æ–∫—É–º–µ–Ω—Ç –æ—Ç @{message.from_user.username}")
    bot.send_message(message.chat.id, "–§–æ—Ç–æ/–¥–æ–∫—É–º–µ–Ω—Ç –ø–æ–ª—É—á–µ–Ω—ã, —Å–ø–∞—Å–∏–±–æ! –û–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞.")

# =========================
# –û—Ç–∑—ã–≤—ã –∏ –≥–∞—Ä–∞–Ω—Ç–∏–∏
@bot.message_handler(func=lambda m: m.text == "üì¢ –û—Ç–∑—ã–≤—ã")
def show_reviews(message):
    bot.send_message(message.chat.id, f"üó£ –û–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –æ—Ç–∑—ã–≤–∞–º–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤:\nüëâ {REVIEW_CHANNEL_LINK}")

@bot.message_handler(func=lambda m: m
